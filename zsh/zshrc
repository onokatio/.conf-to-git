
#zmodload zsh/zprof && zprof
if [[ -z "$CTG" ]] ; then
	echo "var CTG not found"
fi

#export PATH=$HOME/usr/bin:$PATH
export ZPLUG_HOME=$CTG/zsh/zplug
export ZSH_PLUGINS=$CTG/local/zsh-plugins
export ZPLUG_REPOS=$ZSH_PLUGINS
export ZPLUG_BIN=$CTG/local/bin
export ANYENV_ROOT=$ZSH_PLUGINS/onokatio/anyenv
export NO_AT_BRIDGE=1
export EMOJI_CLI_KEYBIND=^f
export HOMEBREW_MAKE_JOBS=4
export HOMEBREW_EDITOR=vi
export PATH=$ZPLUG_BIN:$PATH
#export MANPATH="$(brew --prefix)/share/man:$MANPATH"
#export INFOPATH="$(brew --prefix)/share/info:$INFOPATH"

#export DOCKER_CONTENT_TRUST=1


	source $ZPLUG_HOME/init.zsh
	#zplug 'zplug/zplug', hook-build:'zplug --self-manage'
	zplug "junegunn/fzf-bin", \
		from:gh-r, \
		as:command, \
		rename-to:fzf, \
		use:"*linux*amd64*"
	#	lazy:true
	#zplug "onokatio/anyenv" #, as:command, use:"bin/anyenv"
	#zplug "stedolan/jq", from:gh-r, as:command, lazy:true
	#zplug "zsh-users/zsh-autosuggestions", hook-build:"w=$ZPLUG_REPOS/zsh-users/zsh-autosuggestions;test -d $w&&zcompile $(find $w -name "*.zsh")"
	zplug "zsh-users/zsh-autosuggestions"
	#zplug "zsh-users/zsh-syntax-highlighting", hook-build:"w=$ZPLUG_REPOS/zsh-syntax-highlighting;test -d $w&&zcompile $(find $w -name "*.zsh")"
	zplug "zsh-users/zsh-syntax-highlighting"
	zplug "zsh-users/zsh-completions"
	#zplug "b4b4r07/emoji-cli", on:"stedolan/jq"
	#zplug "TBSliver/zsh-plugin-tmux-simple"
	#zplug "arzzen/calc.plugin.zsh"
	#zplug "felixr/docker-zsh-completion"
	#zplug "mrowa44/emojify", as:command
	zplug "b4b4r07/enhancd", on:"junegunn/fzf-bin"
	zplug "b4b4r07/zsh-gomi", \
	  as:command, \
	  use:bin/gomi, \
	  on:junegunn/fzf-bin
	#	lazy:true
	#zplug "b4b4r07/enhancd", use:enhancd.sh, on:junegunn/fzf-bin
	#zplug "Linuxbrew/brew", lazy:true
	zplug "b4b4r07/history", from:gh-r, as:command, use:"*linux*amd64*", hook-load:'history(){command history $@}'
	#zplug "b4b4r07/history", use:"misc/zsh/init.zsh"
	#, as:command, use:"bin/brew"
	zplug 'meetfranz/franz-app-legacy', from:gh-r, as:command, use:'*linux*x64*', rename-to:franz
	#zplug "junegunn/vim-plug"
	#if ! zplug check --verbose && which git > /dev/null 2>&1 ; then
	#	zplug install
	#fi
	zplug load
 
#export PATH="$ZSH_PLUGINS/Linuxbrew/brew/bin:$PATH"
#export LD_LIBRARY_PATH="$ZSH_PLUGINS/Linuxbrew/brew/lib:$ZSH_PLUGINS/Linuxbrew/brew/lib64"
#export PKG_CONFIG_PATH="$ZSH_PLUGINS/Linuxbrew/brew/lib/pkgconfig:$PKG_CONFIG_PATH"
#export PKG_CONFIG_PATH="$ZSH_PLUGINS/Linuxbrew/brew/lib64/pkgconfig:$PKG_CONFIG_PATH"
#export XDG_DATA_DIRS="$ZSH_PLUGINS/Linuxbrew/brew/share:XDG_DATA_DIRS"
#export MANPATH="$ZSH_PLUGINS/Linuxbrew/brew/share/man:$MANPATH"
#export INFOPATH="$ZSH_PLUGINS/Linuxbrew/brew/share/info:$INFOPATH"

if [[ -d $ANYENV_ROOT ]] ; then
	#eval "$(anyenv init - --no-rehash)"
	export PATH=$ANYENV_ROOT/bin:$PATH
	#eval "$(anyenv init -)"
	anyenv() {
	  typeset command
	  command="$1"
	  if [ "$#" -gt 0 ]; then
	    shift
	  fi
	  command anyenv "$command" "$@"
	}
fi

#if [[ -d $CTG/zshrc.d/ ]] ; then
#	for i ($CTG/zshrc.d/*.zsh) source $i
#fi

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
REPORTTIME=3

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey ";5C" forward-word
bindkey ";5D" backward-word

if [ $CTG/zshrc -nt ~/.zshrc.zwc ]; then
  zcompile ~/.zshrc
fi

#autoload -Uz compinit && compinit -C
#autoload -Uz colors && colors
#autoload -Uz add-zsh-hook
autoload -Uz select-word-style && select-word-style default
autoload -Uz vcs_info
#autoload -Uz zed
zstyle ':zle:*' word-chars "*?_.~-=&!#$%^(){}<>./;@ "
zstyle ':zle:*' word-style unspecified
zstyle ':completion:*' format '%B%F{blue}%d%f%b'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z} r:|[._-]=*'
zstyle ':completion:*' keep-prefix
zstyle ':completion:*' recent-dirs-insert both
#zstyle ':completion:*' completer _expand _complete _list _oldlist _history
zstyle ':completion:*' use-cache yes
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion:*' verbose yes
zstyle ':completion:*' use-cache true
zstyle ':completion:*' list-separator '-->'
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "%F{yellow}!"
zstyle ':vcs_info:git:*' unstagedstr "%F{red}+"
zstyle ':vcs_info:*' formats "%F{green}%c%u[%b]%f"
zstyle ':vcs_info:*' actionformats '[%b|%a]'
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters
setopt notify
setopt correct
setopt auto_list
setopt auto_menu
setopt share_history
setopt histignorealldups
setopt auto_cd
setopt extended_glob
setopt hist_ignore_all_dups
setopt list_packed
setopt list_types
setopt auto_param_slash
setopt mark_dirs
setopt auto_param_keys
setopt magic_equal_subst
setopt complete_in_word
setopt always_last_prompt
setopt print_eight_bit
setopt no_beep
setopt ignore_eof
setopt auto_pushd
setopt hist_ignore_dups
setopt append_history
setopt inc_append_history
setopt hist_no_store
setopt hist_reduce_blanks
setopt prompt_subst
setopt no_nomatch
setopt transient_rprompt
setopt hist_verify
setopt extended_history
setopt hist_expand
setopt rec_exact
setopt no_flow_control
setopt interactive_comments
setopt globdots
alias mkdir='mkdir -p '
alias d='popd '
alias bat="upower -i /org/freedesktop/UPower/devices/battery_BAT0|grep 'percentage'|sed -e 's/ //g'|sed -e 's/percentage://'|sed -e 's/%//' "
alias gcc-win="/usr/bin/i686-w64-mingw32-gcc "
alias nano="vim "
#alias grep="grep --color -n -I "
alias ls='ls -hqp --color=auto '
alias l='ls -hqp --color=auto '
alias wget='axel -n 10 -v -a '
alias make='make -j4 '
alias sudo='sudo -E '
alias apt='apt-fast '
alias apt-get='apt-fast '
alias crontab='echo "dont use crontab !!" '
alias chromef='ps ax|/bin/grep [c]hrome|cut -c-6|xargs sudo renice -19 '
alias pingg="ping 8.8.8.8 "
alias curlg="curl https://google.com "
alias alpine="docker run -it --rm alpine:edge /bin/sh "
alias df='dfc '
alias top='htop '
alias diff='colordiff '
alias info='pinfo '
#alias cat='vimcat '
alias trace-mtr='mtr '
#alias grep='ag '
alias rm="gomi --"
#alias rm='rm -vrI --one-file-system -- '
alias s='w3m https://google.com/search?q='
alias poweroff=': '
alias vi='nvim -u ~/.vimrc '
alias vim='nvim -u ~/.vimrc '

function git(){hub "$@"}
function chrome(){
	chrome_b=$(ps ax|env grep '/opt/google/chrome'|head -n1|awk '{print $5}'|cut -d '/' -f 4)
	eval "google-$chrome_b $@"
}
function targz(){tar xvf $@ --use-compress-prog=pigz }
function tarxz(){tar xvf $@ --use-compress-prog=pixz }
function tarbzip2(){tar xvf $@ --use-compress-prog=pbzip2 }
chpwd() { ls -hqp --color=auto }
precmd () { vcs_info }
function command_not_found_handler(){
	if [ -e /usr/bin/jp2a ];then
		if [ -e ~/kirino.jpg ];then
			jp2a ~/kirino.jpg -i
		fi
	fi
	echo "ハァ…？$1とか何言ってんの？
コマンドもろくに覚えられないなんて、アンタどうしようもないクズね。"
}

if [ ${UID} -eq 0 ]; then
	PROMPT="%K{green}%B%F{black}ROOT%b%k %F{cyan}%~ %f$ "
else
	UUU="%B%F{white}（」・ω・）」うー▶%b"
	NYA="%B%F{white}\（・ω・\）にゃー！%b"
	SAN="%B%F{red}＼（・ω・＼）SAN値！%b"
	PIN="%B%F{red}（／・ω・）／ピンチ！%b"
	PROMPT="%K{green}%(?,${UUU},${SAN})%k%F{cyan}%~ %f$ ❯ "
	RPROMPT="%K{green}%(?,${NYA},${PIN})%k${vcs_info_msg_0_}"
fi
#zprof | less
